M_COMMETNS@((/\*)(.|\s)*?(\*/))
STRING_LITERAL@(\"((.|[^\n])*?)\")
S_COMMENTS@(//[^\n]*)
A_char@(\'(\S| )\')
RIGHT_ROUND_B@(\))
LEFT_ROUND_B@(\()
RIGHT_CURLY_B@(\})
LEFT_CURLY_B@(\{)
EOL@(\n)
TRY@(^|\s|;)(try)(\b)
THROW@((\)|\s)(throw)\b)
SWITCH@(^|\s|;)(switch)([(]|\s)
SUPER@(^|\s|;)(super)
SHORT@(^|\s|;)(short)(\b)
INTERFACE@((;|\s|^)interface )
SEMICOLON@;
INSTANCEOF@(instanceof )
IMPORT@((^|\s)import )
IMPLEMENTS@(implements )
GOTO@(^|\s)(goto )
FOR@((^|\s|;)(for)([{]|\s))
FINALLY@(^|\s)(finally )
FINAL@(^|(\w)*\s)(final )
ENUM@(ENUM )
DOUBLE@(double\b)
DO@(\bdo\b)
DEFAULT@(default )
CONST@(const )
CATCH@(catch )
CASE@(case )
BYTE@(byte )
CONTINUE@(continue )
BREAK@(break )
ASSERT@(assert )
ABSTRACT@(abstract )
NULL@(null )
EXTENDS@(extends )
BOOLEAN@(boolean\b)
CHARACTER@(char\b)
FLOAT@(float\b)
STRING@(String\b)
NEW@(new )
STATIC@(static )
RETURN@(return )
PROTECTED@(protected )
PRIVATE@(private )
PUBLIC@(public )
LENGTH@((\.)length )
WHILE@((while)(\(|\s))
FALSE@(false)
CLASS@(^|\b)(class )
VOID@(void )
TRUE@(true)
THIS@(\bthis\b)
MAIN@(main\b)
PACKAGE@(package\b)
ELSE@(else(\{|\s))
IF@(if(\{|\s))
LESS_EQ@(<=)
GREATER_EQ@(>=)
GREATERTHAN@(>)
LESSTHAN@(<)
MULTIPLY@([*])
DIV@([/])
MOD@([%])
MINUS@(-)
AND@(&&)
OR@([|][|])
SYSTEM.OUT.PRINTLN@(System.out.println)
EQUAL@(==)
ASSIGNMENT@(=)
NOT_EQUAL@(!=)
NOT@(!)
COMMA@(,)
PLUS@([+])
INT@((\b|\w*;)int\b)
FLOAT_LITERAL@(([0-9]+)\.([0-9]+))
INTEGRAL_LITERAL@(\b[0-9]+\b)
RIGHT_SQUARE_B@\]
LEFT_SQUARE_B@\[
DOT@(\.)
ID@(\b([a-zA-Z])(\w*)\b)